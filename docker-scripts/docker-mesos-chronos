#!/bin/bash
#set -x 

current_dir=$(pwd)

echo "Arguments list:"
echo "\$1: Chronos node number, default is 3"
echo "\$2: Zookeeper cluster, default is zoo1:2181,zoo2:2181,zoo3:2181"
echo "\$3: Ethernet interface which is used to communicate with the chronos on host, default is 'eth0'"
echo "\$4: Ethernet interface which is used to assign IP address on container, default is 'eth1'"
echo "\$5: Docker image name, default: mesos:0.0.1"
echo "\$6: IP address of contatiner, default: dhcp"
echo "\$7: JKS password which is used to generate the SSL key and certificate, this will be ignore if you already proivde the certicate (nalanda.jks) under the $current_dir/ssl/."

source ./utils

NODE_COUNT=${1:-3}
ZOO_CLUSTER=${2:-zoo1:2181,zoo2:2181,zoo3:2181}
HOST_INTERFACE=${3:-eth0}
CONTAINER_IF=${4:-eth1}
IMAGE_NAME=${5:-mesos:0.0.1}
CONTAINER_IP=${6:-dhcp}
NALANDA_JKS_PASSWORD=${7:-passw0rd}

local_ip="$(ifconfig $INTERFACE | grep 'inet ' | awk '{print $2}')"
if [ -f $current_dir/ssl/nalanda.jks ]; then
  echo "Find $current_dir/ssl/chronos.jks, will use it."
else
  echo "Generate new SLL certificate!!"
  generate_ssl_certificate_jks $current_dir/ssl/ "nalanda" "$NALANDA_JKS_PASSWORD"
fi

for (( i=1; i<=$NODE_COUNT; i++ ))
do
  SDN_IP=$(get_new_sdn_ip $CONTAINER_IP $i)
  echo "SDN_IP: $SDN_IP"
  sudo docker rm -f chronos_$i
  echo "CONTAINER_IF=$CONTAINER_IF
current_dir=$current_dir
CHRONOS_JKS_PASSWORD=$CHRONOS_JKS_PASSWORD
ZOO_CLUSTER=$ZOO_CLUSTER
quorum=$quorum
i=$i
IMAGE_NAME=$IMAGE_NAME
HOST_INTERFACE=$HOST_INTERFACE
SDN_IP=$SDN_IP" > chronos_${i}_temp.sh
  rm -rf $current_dir/chronos/conf/chronos_${i}
  mkdir -p $current_dir/chronos/conf/chronos_${i}
  echo "zk://$ZOO_CLUSTER/mesos" >$current_dir/chronos/conf/chronos_${i}/master
  echo "$ZOO_CLUSTER" > $current_dir/chronos/conf/chronos_${i}/zk_hosts
  echo "/chronos/state" > $current_dir/chronos/conf/chronos_${i}/zk_path
  echo "/tmp/ssl/nalanda.jks" > $current_dir/chronos/conf/chronos_${i}/ssl_keystore_path
  echo "$NALANDA_JKS_PASSWORD" > $current_dir/chronos/conf/chronos_${i}/ssl_keystore_password
  echo "8080" > $current_dir/chronos/conf/chronos_${i}/http_port
  echo "8443" > $current_dir/chronos/conf/chronos_${i}/https_port
  echo '
CONTAINER_ID=`sudo docker run -d \
    -v $current_dir/ssl:/tmp/ssl \
    -v $current_dir/chronos/conf/chronos_${i}:/etc/chronos/conf \
    -e CONTAINER_IF=$CONTAINER_IF \
    --name chronos_$i $IMAGE_NAME \
    chronos` 
sudo ./pipework $HOST_INTERFACE -i $CONTAINER_IF \
    $CONTAINER_ID $SDN_IP' >> chronos_${i}_temp.sh
done

# Start docker container in parallel
ls chronos_*_temp.sh |xargs -P $NODE_COUNT -n 1 sh
rm -f chronos_*_temp.sh

